{
	"info": {
		"_postman_id": "82360b3b-c5e4-4877-9606-77abedfb71fb",
		"name": "AI-API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "admin",
			"item": [
				{
					"name": "repositories",
					"item": [
						{
							"name": "create repository",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"aicore-test\",\n    \"url\": \"https://github.com/john/aicore-test\",\n    \"username\": \"john\",\n    \"password\": \"XXXXX\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiurl}}/v2/admin/repositories",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"repositories"
									]
								}
							},
							"response": []
						},
						{
							"name": "get repository",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiurl}}/admin/repositories/dummy-repo",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"admin",
										"repositories",
										"dummy-repo"
									]
								}
							},
							"response": []
						},
						{
							"name": "List repositories",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiurl}}/v2/admin/repositories",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"repositories"
									]
								}
							},
							"response": []
						},
						{
							"name": "PATCH repository credentials",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"johndoe-changed\",\n    \"password\": \"johndoespassword-changed\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiurl}}/admin/repositories/dummy-repo",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"admin",
										"repositories",
										"dummy-repo"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete repositories",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiurl}}/v2/admin/repositories/{{repo-name-here}}",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"repositories",
										"{{repo-name-here}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "applications",
					"item": [
						{
							"name": "delete application",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiurl}}/v2/admin/applications/{{appName}}",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"applications",
										"{{appName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "create application",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationName\": \"aicore-test-app\",\n    \"repositoryUrl\": \"https://github.com/<your-username>/aicore-test\",\n    \"revision\": \"HEAD\",\n    \"path\": \"workflows\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiurl}}/v2/admin/applications",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "create application with repo name",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"applicationName\": \"\",\n    \"repositoryName\": \"\",\n    \"revision\": \"\",\n    \"path\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiurl}}/admin/applications",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"admin",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "get application status",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{apiurl}}/v2/admin/applications/{{appName}}/status",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"applications",
										"{{appName}}",
										"status"
									]
								}
							},
							"response": []
						},
						{
							"name": "List applications",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiurl}}/v2/admin/applications",
									"host": [
										"{{apiurl}}"
									],
									"path": [
										"v2",
										"admin",
										"applications"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create objectstoresecret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "AI-Resource-Group",
								"type": "text",
								"value": "tutorial"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"default\",\n    \"type\": \"S3\",\n    \"bucket\": \"asd-11111111-2222-3333-4444-55555555555\",\n    \"endpoint\": \"s3.amazonaws.com\",\n    \"pathPrefix\": \"tutorial\",\n    \"region\": \"us-east-1\",\n    \"data\": {\n        \"AWS_ACCESS_KEY_ID\": \"ASDFASDFASDFASDF\",\n        \"AWS_SECRET_ACCESS_KEY\": \"asdfASDFqwerQWERasdfQWER\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiurl}}/v2/admin/objectStoreSecrets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"objectStoreSecrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "list objectstoresecret",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "AI-Resource-Group",
								"type": "text",
								"value": "tutorial"
							}
						],
						"url": {
							"raw": "{{apiurl}}/v2/admin/objectStoreSecrets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"objectStoreSecrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resourcegroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "AI-Resource-Group",
								"type": "text",
								"value": "tutorial"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"resourceGroupId\":\"tutorial\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiurl}}/v2/admin/resourceGroups",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"resourceGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "List resourcegroup",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/v2/admin/resourceGroups",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"resourceGroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resourcegroup",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/v2/admin/resourceGroups/{{resource_group_name}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"resourceGroups",
								"{{resource_group_name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create docker registry secret",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"docker-registry-secret\",\n  \"data\": {\n    \".dockerconfigjson\": \"{\\\"auths\\\": {\\\"docker.io\\\": {\\\"username\\\": \\\"$username\\\", \\\"password\\\": \\\"$password\\\"}}}\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiurl}}/v2/admin/dockerRegistrySecrets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"dockerRegistrySecrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "List docker registry secrets",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/v2/admin/dockerRegistrySecrets",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"dockerRegistrySecrets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get docker registry secret",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiurl}}/v2/admin/dockerRegistrySecrets/{{name}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"dockerRegistrySecrets",
								"{{name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete docker registry secret",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{apiurl}}/v2/admin/dockerRegistrySecrets/{{name}}",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"admin",
								"dockerRegistrySecrets",
								"{{name}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "metrics",
			"item": [
				{
					"name": "Update/create metric resources (add/modify value of existing ones) against some execution",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "AI-Resource-Group",
								"value": "default"
							},
							{
								"key": "Content-Type",
								"value": "application/merge-patch+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"executionId\": \"aa97b177-9383-4934-8543-0f91b7a0283a\",\n  \"metrics\": [\n    {\n      \"name\": \"Error Rate\",\n      \"value\": 0.98,\n      \"timestamp\": \"2021-06-28T07:50:24.589Z\",\n      \"step\": 2,\n      \"labels\": [\n        {\n          \"name\": \"group\",\n          \"value\": \"tree-82\"\n        }\n      ]\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Artifact Group\",\n      \"value\": \"RFC-1\"\n    }\n  ],\n  \"customInfo\": [\n    {\n      \"name\": \"Confusion Matrix\",\n      \"value\": \"[{'Predicted': 'False',  'Actual': 'False','value': 34},{'Predicted': 'False','Actual': 'True',  'value': 124}, {'Predicted': 'True','Actual': 'False','value': 165},{  'Predicted': 'True','Actual': 'True','value': 36}]\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{apiurl}}/v2/lm/metrics",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"lm",
								"metrics"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get metrics according to specified filter conditions.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "AI-Resource-Group",
								"value": "default"
							}
						],
						"url": {
							"raw": "{{apiurl}}/v2/lm/metrics?executionIds=aa97b177-9383-4934-8543-0f91b7a0283a",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"lm",
								"metrics"
							],
							"query": [
								{
									"key": "executionIds",
									"value": "aa97b177-9383-4934-8543-0f91b7a0283a"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete metrics according to specified filter condition.",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "AI-Resource-Group",
								"value": "default"
							}
						],
						"url": {
							"raw": "{{apiurl}}/v2/lm/metrics?executionId=aa97b177-9383-4934-8543-0f91b7a0283a",
							"host": [
								"{{apiurl}}"
							],
							"path": [
								"v2",
								"lm",
								"metrics"
							],
							"query": [
								{
									"key": "executionId",
									"value": "aa97b177-9383-4934-8543-0f91b7a0283a"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Auth token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List scenarios",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/scenarios",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"scenarios"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Scenario versions",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/scenarios/{{scenarioid}}/versions",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"scenarios",
						"{{scenarioid}}",
						"versions"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Scenario executables",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/scenarios/{{scenarioid}}/executables",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"scenarios",
						"{{scenarioid}}",
						"executables"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create artifact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"artifactid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"tutorial-train-data\",\n  \"kind\": \"dataset\",\n  \"url\": \"ai://default/data\",\n  \"description\": \"Text Classification Dataset\",\n  \"scenarioId\": \"text-clf-tutorial\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/artifacts",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"artifacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "List artifacts",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/artifacts",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"artifacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "List configurations",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/configurations",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"configurations"
					]
				}
			},
			"response": []
		},
		{
			"name": "List executions",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/executions",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"executions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create execution configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"configurationid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"dev-tutorial-training-configuration\",\n  \"executableId\": \"text-clf-train-tutorial\",\n  \"scenarioId\": \"text-clf-tutorial-1\",\n  \"versionId\": \"0.0.1\",\n  \"parameterBindings\": [],\n  \"inputArtifactBindings\": [\n      {\n      \"key\": \"text-data\",\n      \"artifactId\": \"5dde103a-5b4d-4ec8-8131-3435151afabb\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/configurations",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"configurations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start execution",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"executionid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/configurations/{{configurationid}}/executions",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"configurations",
						"{{configurationid}}",
						"executions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get execution",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/executions",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"executions"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get execution logs",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "default",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/executions/{{executionid}}/logs?start=2021-09-24T10:07:49Z",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"executions",
						"{{executionid}}",
						"logs"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-24T10:07:49Z"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop execution",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"targetStatus\": \"STOPPED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/executions/{{executionid}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"executions",
						"{{executionid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete execution",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/executions/{{executionid}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"executions",
						"{{executionid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "List deployments",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"type": "text",
						"value": "default"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/deployments",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"deployments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register model artifact",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"artifactid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "default",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"labels\": [\n      \n  ],\n  \"name\": \"inception_model\",\n  \"kind\": \"model\",\n  \"url\": \"ai://default/inception\",\n  \"description\": \"inception model\",\n  \"scenarioId\": \"{{scenarioid}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/lm/artifacts",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"lm",
						"artifacts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create deployment configuration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"configurationid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"type": "text",
						"value": "tutorial"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"dev-tutorial-serving-configuration\",\n  \"executableId\": \"text-clf-infer-tutorial-ws\",\n  \"scenarioId\": \"text-clf-tutorial-1\",\n  \"versionId\": \"0.0.1\",\n  \"parameterBindings\": [],\n  \"inputArtifactBindings\": [\n      {\n      \"key\": \"textmodel\",\n      \"artifactId\": \"bbf25c3a-0ba6-4b57-997e-c33ac1bfb328\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/configurations",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"configurations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start deployment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"deploymentid\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/configurations/{{configurationid}}/deployments",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"configurations",
						"{{configurationid}}",
						"deployments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deployment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"deploymenturl\", jsonData.deploymentUrl);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/deployments/{{deploymentid}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"deployments",
						"{{deploymentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deployment logs",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "default",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/deployments/{{deploymentid}}/logs?start=2021-09-24T10:59:31Z",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"deployments",
						"{{deploymentid}}",
						"logs"
					],
					"query": [
						{
							"key": "start",
							"value": "2021-09-24T10:59:31Z"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Inference",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "AI-Resource-Group",
						"value": "tutorial",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"text\": \"I loved this food, it was very good\"\n}"
				},
				"url": {
					"raw": "{{deploymenturl}}/v1/models/{{modelName}}:predict",
					"host": [
						"{{deploymenturl}}"
					],
					"path": [
						"v1",
						"models",
						"{{modelName}}:predict"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop deployment",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "default",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"targetStatus\": \"STOPPED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{apiurl}}/v2/lm/deployments/{{deploymentid}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"deployments",
						"{{deploymentid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete deployment",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "AI-Resource-Group",
						"value": "default",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{apiurl}}/v2/lm/deployments/{{deploymentid}}",
					"host": [
						"{{apiurl}}"
					],
					"path": [
						"v2",
						"lm",
						"deployments",
						"{{deploymentid}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}